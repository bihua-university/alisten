[project]
name = "musiclet"
version = "0.0.1"
description = ""
authors = [{ name = "uy/sun", email = "hmy0119@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.8.0",
    "boto3>=1.26.0",
    "psycopg2-binary>=2.9.0",
    "python-dateutil>=2.8.0",
    "yt-dlp>=2023.1.6",
]

[project.scripts]
musiclet = "musiclet.__main__:main"

[project.urls]
Homepage = "https://github.com/bihua-university/alisten"
Repository = "https://github.com/bihua-university/alisten.git"
Issues = "https://github.com/bihua-university/alisten/issues"

[build-system]
requires = ["uv_build>=0.8.5,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "pytest-xdist>=3.8.0",
    "poethepoet>=0.37.0",
    "inline-snapshot>=0.29.0",
]

[tool.uv.pip]
universal = true

[tool.poe.tasks]
test = "pytest --cov=src/musiclet --cov-report xml --junitxml=./junit.xml -n auto"

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "standard"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
    "W",   # pycodestyle warnings
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "UP",  # pyupgrade
    "C4",  # flake8-comprehensions
    "T10", # flake8-debugger
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "TC",  # flake8-type-checking
    "DTZ", # flake8-datetimez
    "RUF", # Ruff-specific rules
    "I",   # isort
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError:",
]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.inline-snapshot]
format-command = "uv format -- --stdin-filename {filename}"
